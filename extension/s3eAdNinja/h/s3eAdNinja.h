/*
 * Copyright (C) 2001-2012 Ideaworks3D Ltd.
 * All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Ideaworks Labs.
 * This file consists of source code released by Ideaworks Labs under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_ADNINJA_H
#define S3E_EXT_ADNINJA_H

#include <s3eTypes.h>

enum s3eAdNinjaCallback
{
	S3E_ADNINJA_CALLBACK_AD_LOAD,
	S3E_ADNINJA_CALLBACK_AD_FAIL,
	S3E_ADNINJA_CALLBACK_FULLSCREEN_BEGIN,
	S3E_ADNINJA_CALLBACK_FULLSCREEN_END,
	S3E_ADNINJA_CALLBACK_MAX
};
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the AdNinja extension is available.
 */
s3eBool s3eAdNinjaAvailable();

/**
 * Registers a callback to be called for an operating system event.
 *
 * The available callback types are listed in @ref s3eAdNinjaCallback.
 * @param cbid ID of the event for which to register.
 * @param fn callback function.
 * @param userdata Value to pass to the @e userdata parameter of @e NotifyFunc.
 * @return
 *  - @ref S3E_RESULT_SUCCESS if no error occurred.
 *  - @ref S3E_RESULT_ERROR if the operation failed.\n
 *
 * @see s3eAdNinjaUnRegister
 * @note For more information on the system data passed as a parameter to the callback
 * registered using this function, see the @ref s3eAdNinjaCallback enum.
 */
s3eResult s3eAdNinjaRegister(s3eAdNinjaCallback cbid, s3eCallback fn, void* userData);

/**
 * Unregister a callback for a given event.
 * @param cbid ID of the callback for which to register.
 * @param fn Callback Function.
 * @return
 * - @ref S3E_RESULT_SUCCESS if no error occurred.
 * - @ref S3E_RESULT_ERROR if the operation failed.\n
 * @note For more information on the systemData passed as a parameter to the callback
 * registered using this function, see the s3eAdNinjaCallback enum.
 * @note It is not necessary to define a return value for any registered callback.
 * @see s3eAdNinjaRegister
 */
s3eResult s3eAdNinjaUnRegister(s3eAdNinjaCallback cbid, s3eCallback fn);

s3eResult s3eAdNinjaStart(const char* appKey);

s3eResult s3eAdNinjaRequestFreshAd();

s3eResult s3eAdNinjaShow();

s3eResult s3eAdNinjaHide();

S3E_END_C_DECL

#endif /* !S3E_EXT_ADNINJA_H */
